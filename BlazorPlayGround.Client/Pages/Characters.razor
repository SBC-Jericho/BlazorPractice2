@page "/all-characters"
@inject IClientCharacterService ClientCharacterService 
@inject IClientTeamService ClientTeamService
@inject IClientDifficultyService ClientDifficultyService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
<PageTitle>Character</PageTitle>


<h1>Character</h1>

<MudTable Items="ClientCharacterService.ClientCharacter" Hover="true" Striped="true" Dense="true" Class="mb-2">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Bio</MudTh>
        <MudTh>Birth Date</MudTh>
        <MudTh>Team</MudTh>
        <MudTh>Difficulty</MudTh>
        <MudTh>Ready to Fight?</MudTh>
    </HeaderContent>
    <RowTemplate Context="character">
        <MudTd DataLabel="Image"><MudAvatar Image="@character.Image" /></MudTd>
        <MudTd DataLabel="Name">@character.Name</MudTd>
            <MudTd DataLabel="Bio">@character.Bio</MudTd>
            <MudTd DataLabel="BirthDate">
                @if (character.BirthDate.HasValue)
            {
                @character.BirthDate.Value.ToString("MMMM dd, yyyy")
            }
            else
            {
                <span>N/A</span>
            }
        </MudTd>
        @if (character.Team != null)
            {
            <MudTd DataLabel="Team">@character.Team.Name</MudTd>
            }
            else
            {
              <MudTd>N/A</MudTd>
            }
        @if (character.Difficulty != null)
            {
            <MudTd DataLabel="Difficulty">@character.Difficulty.Title</MudTd>
            }
            else
            {
                <MudTd>N/A</MudTd>
            }
        <MudTd DataLabel="isReadyToFight">@character.isReadyToFight</MudTd>
        <AuthorizeView Roles="Admin">
           <Authorized>
                <MudTd DataLabel="Edit">
                        <MudIconButton OnClick="(() => EditCharacter(character.Id))"
                                    Icon="@Icons.Material.Filled.Edit"
                                    Color="Color.Primary"
                                    Variant="Variant.Filled"></MudIconButton>
                </MudTd>
                <MudTd DataLabel="Delete">
                        <MudIconButton OnClick="(() => DeleteCharacter(character.Id))"
                                   Icon="@Icons.Material.Filled.Delete"
                                   Color="Color.Error"
                                   Variant="Variant.Filled"></MudIconButton>
                </MudTd>
            </Authorized>
         </AuthorizeView>
    </RowTemplate>

</MudTable>  
    <AuthorizeView Roles="Admin">
        <Authorized>
            <MudButton @onclick="CreateNewCharacter" Color="Color.Primary" Variant="Variant.Filled">Create new character</MudButton>
     </Authorized>
    </AuthorizeView>
@* <button class="btn btn-primary"
        @onclick="CreateNewCharacter">
    Create new Character
</button> *@
<p style="height:500px;"></p>
@code {

    // lifecycle method
    protected override async Task OnInitializedAsync()
    {
        await ClientCharacterService.GetAllCharacter();
    }

    void EditCharacter(int id)
    {
        //Navigate the user to another page - inject  NavigationManager NavigationManager
        NavigationManager.NavigateTo($"single-character/{id}");
    }

    void CreateNewCharacter()
    {
        NavigationManager.NavigateTo("/single-character");
    }

    async Task DeleteCharacter(int id)
    {
        await ClientCharacterService.DeleteCharacter(id);
        StateHasChanged();
        Snackbar.Add(
        "Character Deleted",
        Severity.Success,
        config =>
        {
        config.ShowTransitionDuration = 200;
        config.HideTransitionDuration = 400;
        config.VisibleStateDuration = 2500;
        });
    }
}
